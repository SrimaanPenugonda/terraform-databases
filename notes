S40: Create DB 1:06:00
    - RDS - mysql of aws service
    - redis - Elastic Cache
    - mongodb - document db - but cant use with out authentication
       so using server and setup mongodb
    - rabbitmq - Amazon MQ
S41:
- crate a repo terraform-databases
    Create A subnet grp and parameter grp.. these are mandit for any db
    - rds.tf mysql db
      - create a subnet group
        from vpc state file - data.tf
        private_subnets
        name - mysql
      - create parameter grp
        family - mysql5.7
      - create cluster grp
        its just group of instances
         - aurora-mysql - customized version of mysql
         -database_name - "defaultdb"
         username.pwd from secret manager
         secret manager - add in data.tf
         add jsondecode- MYSQL_USER,MYSQL_PASS
         db_cluster_paramter grp name
     - create cluster instance  - "db.t3.small"
        create a security grp to connect to this instance
           subnet will be both default vpc(workstation der) and roboshop vpc

     - now load the schema shipping.sql by logging to that mysql - use null resource localexec

- Reddis Elastic cache:
same like mysql create subnet grp,paramater grp and cluster
security grp,
no need of instance

mongo and rabbitmq - no amazon services
so create an instance using ami
and create security grp
add null resources.. and run ansible role for each

S42:




